{"componentChunkName":"component---src-components-posts-post-template-index-js","path":"/2021/global-git-ignore/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Global gitignore\",\n  \"date\": \"2021-07-05T00:00:00.000Z\",\n  \"tags\": [\"git\"],\n  \"excerpt\": \"Git tips and tricks\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Have you ever accidentally committed a .DS_Store file? or started at a new company and opened up a PR adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".vscode\"), \"\\nor \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".idea\"), \" folders to a repo's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".gitignore\"), \"? Keep those pesky user specific config files out of your repo easily by\\ncreating a global gitignore file.\"), mdx(\"div\", {\n    \"className\": \"gatsby-code-title code-title-custom\"\n  }, \".gitignore\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-gitignore\"\n  }, \".DS_Store\\n.idea\\n.vscoe\\n\")), mdx(\"p\", null, \"Save this file off somewhere; I would recommend ~/.gitignore or maybe in your dotfiles repo, and then either run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ git config --global core.excludesFile /path/to/globalgitignore\\n\")), mdx(\"p\", null, \"or to your gitconfig\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ini:.gitconfig\"\n  }, \"[core]\\n    excludesfile = /path/to/globalgitignore\\n\")), mdx(\"p\", null, \"This does not replace the need for a repo's gitignore. I would still recommend keeping output and artifacts of your\\ncode bases in repo-specific ignore files to 1. keep the context of things that a repo produces that we don't want to\\nversion and 2. avoid every dev having to update their global gitignore.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Git tips and tricks","fields":{"slug":"/2021/global-git-ignore/"},"frontmatter":{"title":"Global gitignore","date":"07/05/2021","tags":["git"]}}},"pageContext":{"slug":"/2021/global-git-ignore/","prev":{"fields":{"slug":"/2021/hello-blog/"},"frontmatter":{"title":"Hello Blog","tags":[],"date":"2021-01-14T00:00:00.000Z","excerpt":"Learning Gatsby and React","draft":null}}}},"staticQueryHashes":["1703067421","3649515864","63159454"]}