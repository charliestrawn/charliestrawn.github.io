{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","useState","undefined","loaded","setLoaded","posts","allMdx","edges","useEffect","curLoad","sessionStorage","getItem","parseInt","window","addEventListener","handleScroll","removeEventListener","lastPostLoaded","document","querySelector","lastPostLoadedOffset","offsetTop","clientHeight","pageYOffset","innerHeight","length","prev","setItem","title","loads"],"mappings":"4FAAA,oEA+EeA,UAvEG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACFC,wBAASC,GAA9BC,EADuB,KACfC,EADe,KAExBC,EAAQL,EAAKM,OAAOC,MAE1BC,qBAAU,WACR,IAAMC,EAAUC,eAAeC,QAAQ,YAP1B,GAQbP,EAAUQ,SAASH,MAClB,IAEHD,qBAAU,WAGR,OAFAK,OAAOC,iBAAiB,SAAUC,GAE3B,WACLF,OAAOG,oBAAoB,SAAUD,OAIzC,IAAMA,EAAe,WACnB,IAAME,EAAiBC,SAASC,cAC9B,iCAEIC,EACJH,EAAeI,UAAYJ,EAAeK,aACzBT,OAAOU,YAAcV,OAAOW,YAE9BJ,GAEXf,EAAMoB,OAAStB,GACjBC,GAAU,SAAAsB,GAER,OADAhB,eAAeiB,QAAQ,UAAWD,EA/B3B,IAgCAA,EAhCA,OAqCf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,SACX,kBAAC,IAAD,CAAUvB,MAAOA,EAAOwB,MAAO1B","file":"component---src-pages-index-js-444160f15a3666a35317.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport MainCard from \"../components/MainCard\"\n\nconst loadsPer = 15\n\nconst IndexPage = ({ data }) => {\n  const [loaded, setLoaded] = useState(undefined)\n  const posts = data.allMdx.edges\n\n  useEffect(() => {\n    const curLoad = sessionStorage.getItem(\"curLoad\") || loadsPer\n    setLoaded(parseInt(curLoad))\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  })\n\n  const handleScroll = () => {\n    const lastPostLoaded = document.querySelector(\n      \"div.posts-list > a:last-child\"\n    )\n    const lastPostLoadedOffset =\n      lastPostLoaded.offsetTop + lastPostLoaded.clientHeight\n    const pageOffset = window.pageYOffset + window.innerHeight\n\n    if (pageOffset > lastPostLoadedOffset) {\n      // Stops loading\n      if (posts.length > loaded)\n        setLoaded(prev => {\n          sessionStorage.setItem(\"curLoad\", prev + loadsPer)\n          return prev + loadsPer\n        })\n    }\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <MainCard posts={posts} loads={loaded} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          id\n          body\n          excerpt(pruneLength: 180, truncate: true)\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MM/DD/YYYY\")\n            title\n            tags\n            excerpt\n            draft\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}